upstream backend {
    server backend:3000;  # Configuration du groupe de serveurs en amont (upstream) appelé "backend" avec un serveur écoutant sur le port 3000.
}

server {
    listen 80;  # Écoute des requêtes HTTP sur le port 80.
    listen 443 ssl;  # Écoute des requêtes HTTPS sur le port 443 avec SSL/TLS activé.
    listen [::]:443 ssl;  # Écoute des requêtes IPv6 HTTPS sur le port 443 avec SSL/TLS activé.
    server_name localhost;  # Le nom du serveur est défini comme "localhost".
    root /var/www/html;  # Le répertoire racine du serveur est "/var/www/html".

    ssl_certificate /etc/nginx/ssl/certs/localhost.crt;  # Spécifie le chemin du certificat SSL pour les communications sécurisées.
    ssl_certificate_key /etc/nginx/ssl/private/localhost.key;  # Spécifie le chemin de la clé privée correspondante au certificat SSL.
    ssl_protocols TLSv1.2 TLSv1.3;  # Autorise les protocoles SSL/TLS TLSv1.2 et TLSv1.3.

    index index.html;  # Le fichier "index.html" sera servi si aucun fichier spécifique n'est demandé.
    charset utf-8;  # Le jeu de caractères utilisé pour les pages servies est défini comme UTF-8.
    error_log /var/log/nginx/error.log;  # Le chemin du fichier journal d'erreurs est défini.
    access_log /var/log/nginx/access.log;  # Le chemin du fichier journal d'accès est défini.
    client_max_body_size 100M;  # Limite la taille maximale des requêtes client à 100 Mo.

    location / {
        root /var/www/html;  # Le répertoire racine pour cet emplacement est "/var/www/html".
        index index.html;  # Le fichier "index.html" sera servi si aucun fichier spécifique n'est demandé.
        include /etc/nginx/mime.types;  # Inclut le fichier des types MIME pour la configuration.
        try_files $uri $uri/ /index.html;  # Essaie de servir le fichier demandé, le dossier, puis "/index.html" s'ils ne sont pas trouvés.
    }

    location /api {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Ajoute l'en-tête X-Forwarded-For pour conserver l'adresse IP d'origine du client.
        
        add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';  # Ajoute l'en-tête Cache-Control pour le contrôle du cache.
        proxy_cache off;  # Désactive le cache du proxy.
        proxy_pass http://backend;  # Transmet les requêtes à l'upstream "backend".
        proxy_set_header Host $host;  # Propage l'en-tête Host de la requête client vers l'upstream.
        proxy_http_version 1.1;  # Utilise la version 1.1 du protocole HTTP pour les communications avec l'upstream.
        proxy_set_header X-Real-IP $remote_addr;  # Propage l'adresse IP réelle du client vers l'upstream.
        proxy_set_header Upgrade $http_upgrade;  # Propage l'en-tête Upgrade de la requête client vers l'upstream.
        proxy_set_header Connection "upgrade";  # Propage l'en-tête Connection de la requête client vers l'upstream.
    }

    # Handle errors
    error_page 404 /404.html;  # Redirige les erreurs 404 vers "/404.html".
    location = /404.html {
        internal;  # Cette location est interne et ne peut être accédée directement.
    }
}
